openapi: "3.0.0"
info:
  title: "Yondero API"
  version: "0.0.1"

servers:
  - url: "http://localhost:8080/api/v1"

paths:
  /:
    get:
      tags:
        - "Endpoints"
      description: "Get all the available endpoints"
      responses:
        200:
          $ref: "#/components/responses/success"
        500:
          $ref: "#/components/responses/internal_server_error"

  /register:
    post:
      tags:
        - User
      description: "Register a new user"
      requestBody:
        $ref: "#/components/requestBodies/userdata"
      responses:
        200:
          $ref: "#/components/responses/success"
        400:
          $ref: "#/components/responses/bad_request"
        500:
          $ref: "#/components/responses/internal_server_error"

  /item/cite:
    post:
      tags:
        - "Item"
      description: "Return the citation for the item, BibTeX format"
      requestBody:
        $ref: "#/components/requestBodies/cite_item"
      responses:
        200:
          $ref: "#/components/responses/success"
        404:
          $ref: "#/components/responses/not_found"
        500:
          $ref: "#/components/responses/internal_server_error"

  /item/new:
    post:
      tags:
        - "Item"
      requestBody:
        $ref: "#/components/requestBodies/new_item"
      responses:
        200:
          $ref: "#/components/responses/success"
        400:
          $ref: "#/components/responses/bad_request"
        401:
          $ref: "#/components/responses/unauthorized"
        500:
          $ref: "#/components/responses/internal_server_error"

  /item/update:
    post:
      tags:
        - Item
      description: "Update the metadata of an item"
      requestBody:
        $ref: "#/components/requestBodies/update_item"
      responses:
        200:
          $ref: "#/components/responses/success"
        400:
          $ref: "#/components/responses/bad_request"

  /item/upload:
    post:
      tags:
        - "Item"
      description: upload a file
      requestBody:
        $ref: "#/components/requestBodies/upload_item"
      responses:
        200:
          $ref: "#/components/responses/success"
        401:
          $ref: "#/components/responses/unauthorized"
        409:
          $ref: "#/components/responses/conflict"
        500:
          $ref: "#/components/responses/internal_server_error"

  /item/download:
    post:
      tags:
        - "Item"
      description: download PDF of an metadata
      requestBody:
        $ref: "#/components/requestBodies/download_item"
      responses:
        200:
          $ref: "#/components/responses/success"
        401:
          $ref: "#/components/responses/unauthorized"
        403:
          $ref: "#/components/responses/forbidden"
        404:
          $ref: "#/components/responses/not_found"
        500:
          $ref: "#/components/responses/internal_server_error"

  /item/all:
    post:
      tags:
        - "Item"
      description: Fetch all metadata
      responses:
        200:
          $ref: "#/components/responses/success"
        403:
          $ref: "#/components/responses/forbidden"
        500:
          $ref: "#/components/responses/internal_server_error"

components:
  requestBodies:
    userdata:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/userdata"
    cite_item:
      content:
        application/json:
          schema:
            type: object
            properties:
              item_id:
                $ref: "#/components/schemas/item_id"
              user_id:
                $ref: "#/components/schemas/user_id"
    new_item:
      content:
        application/json:
          schema:
            type: object
            properties:
              user_id:
                $ref: "#/components/schemas/user_id"
              metadata:
                $ref: "#/components/schemas/metadata"
    update_item:
      content:
        application/json:
          schema:
            type: object
            properties:
              user_id:
                $ref: "#/components/schemas/user_id"
              item_id:
                $ref: "#/components/schemas/item_id"
              metadata:
                $ref: "#/components/schemas/metadata"
    upload_item:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              user_id:
                $ref: "#/components/schemas/user_id"
              item_id:
                $ref: "#/components/schemas/item_id"
              file:
                $ref: "#/components/schemas/file"
    download_item:
      content:
        application/json:
          schema:
            type: object
            properties:
              user_id:
                $ref: "#/components/schemas/user_id"
              item_id:
                $ref: "#/components/schemas/item_id"

  responses:
    success:
      description: "Success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/success"
    bad_request:
      description: "Bad request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/bad_request"
    unauthorized:
      description: "Unauthorized"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/unauthorized"
    forbidden:
      description: "Forbidden"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/forbidden"
    not_found:
      description: "Not found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/not_found"
    conflict:
      description: "Conflict"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/conflict"
    internal_server_error:
      description: "Internal server error"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/internal_server_error"

  schemas:
    # item data
    metadata:
      type: object
      properties:
        doi:
          $ref: "#/components/schemas/doi"
        title:
          $ref: "#/components/schemas/title"
        authors:
          $ref: "#/components/schemas/authors"
        journal:
          $ref: "#/components/schemas/journal"
        volume:
          $ref: "#/components/schemas/volume"
        issue:
          $ref: "#/components/schemas/issue"
        pages:
          $ref: "#/components/schemas/pages"
        year:
          $ref: "#/components/schemas/year"
        url:
          $ref: "#/components/schemas/url"
    item_id:
      type: integer
      example: 1
    doi:
      type: string
      example: "10.2307/1969529"
    title:
      type: string
      example: "Non-Cooperative Games"
    authors:
      type: array
      items:
        type: string
        example: "John Nash"
    journal:
      type: string
      example: "Annals of Mathematics"
    volume:
      type: string
      example: "54"
    issue:
      type: string
      example: "2"
    pages:
      type: string
      example: "286--295"
    year:
      type: string
      example: "1951"
    url:
      type: string
      example: "http://www.jstor.org/stable/1969529"
    file:
      type: string
      format: binary

    # user data
    userdata:
      type: object
      properties:
        user_id:
          $ref: "#/components/schemas/user_id"
        username:
          $ref: "#/components/schemas/username"
        password:
          $ref: "#/components/schemas/password"
    user_id:
      type: integer
      example: 1
    username:
      type: string
      example: "admin"
    password:
      type: string
      example: "admin"
    # HTTP status codes
    success:
      type: object
      properties:
        message:
          type: string
          example: "Success"
    bad_request:
      type: object
      properties:
        message:
          type: string
          example: "Bad Request"
    unauthorized:
      type: object
      properties:
        message:
          type: string
          example: "Unauthorized"
    forbidden:
      type: object
      properties:
        message:
          type: string
          example: "Forbidden"
    not_found:
      type: object
      properties:
        message:
          type: string
          example: "Not Found"
    conflict:
      type: object
      properties:
        message:
          type: string
          example: "Conflict"
    internal_server_error:
      type: object
      properties:
        message:
          type: string
          example: "Internal Server Error"
    # Misc
    bibtex:
      example: |
        "@article{10.2307/1969529,\n
        ISSN = {0003486X},\n
        URL = {http://www.jstor.org/stable/1969529},\n
        author = {John Nash},\n
        journal = {Annals of Mathematics},\n
        number = {2},\n
        pages = {286--295},\n
        publisher = {Annals of Mathematics},\n
        title = {Non-Cooperative Games},\n
        urldate = {2022-04-19},\n
        volume = {54},\n
        year = {1951}\n
        }"
