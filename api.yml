openapi: "3.0.0"
info:
  title: "Yondero API"
  version: "0.0.1"

servers:
  - url: "http://localhost:8080/api/v1"

paths:
  /:
    get:
      responses:
        200:
          $ref: "#/components/responses/success"
        500:
          $ref: "#/components/responses/internal_server_error"

  /articles:
    get:
      tags:
        - Handle Existing Articles
      description: Get list of Articles
      responses:
        200:
          $ref: "#/components/responses/success"
        404:
          $ref: "#/components/responses/not_found"
        500:
          $ref: "#/components/responses/internal_server_error"
    post:
      tags:
        - Handle New Articles
      description: Create a new article. CANNOT UPLOAD FILE.
      requestBody:
        $ref: "#/components/requestBodies/metadata"
      responses:
        201:
          $ref: "#/components/responses/created"
        400:
          $ref: "#/components/responses/bad_request"
        409:
          $ref: "#/components/responses/conflict"
        500:
          $ref: "#/components/responses/internal_server_error"

  /attachments:
    post: 
      tags:
        - Handle New Attachment
      description: Create a new attachment. CAN UPLOAD FILE.
      requestBody:
        $ref: "#/components/requestBodies/attachment"
      responses:
        201:
          $ref: "#/components/responses/created"
        400:
          $ref: "#/components/responses/bad_request"
        413:
          $ref: "#/components/responses/payload_too_large"
        415:  
          $ref: "#/components/responses/unsupported_media_type"
        500:
          $ref: "#/components/responses/internal_server_error"
  /articles/{article_id}:
    get:
      tags:
        - Handle Existing Articles
      description: Get an existing Article
      parameters:
        - $ref: "#/components/parameters/article_id"
      responses:
        200:
          $ref: "#/components/responses/success"
        404:
          $ref: "#/components/responses/not_found"
        500:
          $ref: "#/components/responses/internal_server_error"
    put:
      tags:
        - Handle Existing Articles
      description: Update an existing Article
      parameters:
        - $ref: "#/components/parameters/article_id"
      requestBody:
        $ref: "#/components/requestBodies/metadata"
      responses:
        200:
          $ref: "#/components/responses/success"
        400:
          $ref: "#/components/responses/bad_request"
        404:
          $ref: "#/components/responses/not_found"
        500:
          $ref: "#/components/responses/internal_server_error"
    delete:
      tags:
        - Handle Existing Articles
      description: Delete an existing Article
      parameters:
        - $ref: "#/components/parameters/article_id"
      responses:
        200:
          $ref: "#/components/responses/success"
        404:
          $ref: "#/components/responses/not_found"
        500:
          $ref: "#/components/responses/internal_server_error"
  /articles/{article_id}/attachment:
    get:
      tags:
        - Handle Existing Attachment
      description: Get an Article file
      parameters:
        - name: article_id
          in: query
          description: Article ID
          required: true
          schema:
            $ref: "#/components/schemas/article_id"
      responses:
        200:
          $ref: "#/components/responses/success"
        404:
          $ref: "#/components/responses/not_found"
        500:
          $ref: "#/components/responses/internal_server_error"
    post:
      tags:
        - Handle New Attachment
      description: Create a new Article file upload
      requestBody:
        $ref: "#/components/requestBodies/attachment"
      responses:
        201:
          $ref: "#/components/responses/created"
        400:
          $ref: "#/components/responses/bad_request"
        409:
          $ref: "#/components/responses/conflict"
        413:
          $ref: "#/components/responses/payload_too_large"
        415:
          $ref: "#/components/responses/unsupported_media_type"
        500:
          $ref: "#/components/responses/internal_server_error"
    put:
      tags:
        - Handle Existing Attachment
      description: Update an existing Article file
      requestBody:
        $ref: "#/components/requestBodies/attachment"
      responses:
        200:
          $ref: "#/components/responses/success"
        400:
          $ref: "#/components/responses/bad_request"
        404:
          $ref: "#/components/responses/not_found"
        413:
          $ref: "#/components/responses/payload_too_large"
        415:
          $ref: "#/components/responses/unsupported_media_type"
        500:
          $ref: "#/components/responses/internal_server_error"
    delete:
      tags:
        - Handle Existing Attachment
      description: Delete an existing Article file
      parameters:
        - $ref: "#/components/parameters/article_id"
      responses:
        200:
          $ref: "#/components/responses/success"
        404:
          $ref: "#/components/responses/not_found"
        500:
          $ref: "#/components/responses/internal_server_error"

components:
  parameters:
    article_id:
      in: path
      required: true
      description: Article ID
      name: article_id
      schema:
        $ref: "#/components/schemas/article_id"
    attachment_id:
      in: path
      required: true
      description: Attachment ID
      name: attachment_id
      schema:
        $ref: "#/components/schemas/attachment_id"
  requestBodies:
    metadata:
      description: Article metadata
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/metadata"
    attachment:
      description: Article file
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/file"

  responses:
    success:
      description: "Success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/success"
    created:
      description: "Created"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/created"
    bad_request:
      description: "Bad request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/bad_request"
    unauthorized:
      description: "Unauthorized"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/unauthorized"
    forbidden:
      description: "Forbidden"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/forbidden"
    not_found:
      description: "Not found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/not_found"
    conflict:
      description: "Conflict"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/conflict"
    payload_too_large:
      description: "Payload too large"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/payload_too_large"
    unsupported_media_type:
      description: "Unsupported media type"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/unsupported_media_type"
    internal_server_error:
      description: "Internal server error"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/internal_server_error"

  schemas:
    # article component
    article_id:
      type: integer
      example: 1
    article_type:
      type: string
      example: "article"
    doi:
      type: string
      example: "10.2307/1969529"
    title:
      type: string
      example: "Non-Cooperative Games"
    authors:
      type: array
      items:
        type: string
        example: "John Nash"
    journal:
      type: string
      example: "Annals of Mathematics"
    volume:
      type: string
      example: "54"
    issue:
      type: string
      example: "2"
    pages:
      type: string
      example: "286--295"
    year:
      type: string
      example: "1951"
    abstract:
      type: string
      example: "This is an abstract"
    keywords:
      type: array
      example: ["keyword1", "keyword2"]
    note:
      type: string
      example: "This is a note"
    tags:
      type: array
      example: ["tag1", "tag2"]
    url:
      type: string
      example: "http://www.jstor.org/stable/1969529"
    file:
      type: string
      format: binary
    attachment_id:
      type: integer
      example: 1D

    metadata:
      type: object
      properties:
        doi:
          $ref: "#/components/schemas/doi"
        article_type:
          $ref: "#/components/schemas/article_type"
        title:
          $ref: "#/components/schemas/title"
        authors:
          $ref: "#/components/schemas/authors"
        journal:
          $ref: "#/components/schemas/journal"
        volume:
          $ref: "#/components/schemas/volume"
        issue:
          $ref: "#/components/schemas/issue"
        pages:
          $ref: "#/components/schemas/pages"
        year:
          $ref: "#/components/schemas/year"
        abstract:
          $ref: "#/components/schemas/abstract"
        keywords:
          $ref: "#/components/schemas/keywords"
        url:
          $ref: "#/components/schemas/url"
        note:
          $ref: "#/components/schemas/note"
        tags:
          $ref: "#/components/schemas/tags"

    # HTTP status codes
    success:
      type: object
      properties:
        message:
          type: string
          example: "Success"
    created:
      type: object
      properties:
        message:
          type: string
          example: "Created"
    bad_request:
      type: object
      properties:
        message:
          type: string
          example: "Bad Request"
    unauthorized:
      type: object
      properties:
        message:
          type: string
          example: "Unauthorized"
    forbidden:
      type: object
      properties:
        message:
          type: string
          example: "Forbidden"
    not_found:
      type: object
      properties:
        message:
          type: string
          example: "Not Found"
    conflict:
      type: object
      properties:
        message:
          type: string
          example: "Conflict"
    payload_too_large:
      type: object
      properties:
        message:
          type: string
          example: "Payload too large"
    unsupported_media_type:
      type: object
      properties:
        message:
          type: string
          example: "Unsupported Media Type"
    internal_server_error:
      type: object
      properties:
        message:
          type: string
          example: "Internal Server Error"
    # Misc
    bibtex:
      example: |
        "@article{10.2307/1969529,\n
        ISSN = {0003486X},\n
        URL = {http://www.jstor.org/stable/1969529},\n
        author = {John Nash},\n
        journal = {Annals of Mathematics},\n
        number = {2},\n
        pages = {286--295},\n
        publisher = {Annals of Mathematics},\n
        title = {Non-Cooperative Games},\n
        urldate = {2022-04-19},\n
        volume = {54},\n
        year = {1951}\n
        }"
