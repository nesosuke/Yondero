# generated by datamodel-codegen:
#   filename:  api.yml
#   timestamp: 2022-12-16T14:02:30+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional, Union

from pydantic import BaseModel


class Address(BaseModel):
    __root__: str


class Annote(BaseModel):
    __root__: str


class Booktitle(BaseModel):
    __root__: str


class Chapter(BaseModel):
    __root__: str


class Doi(BaseModel):
    __root__: str


class Edition(BaseModel):
    __root__: str


class Editor(BaseModel):
    __root__: str


class Author(BaseModel):
    __root__: str


class Howpublished(BaseModel):
    __root__: str


class Institution(BaseModel):
    __root__: str


class Issn(BaseModel):
    __root__: str


class Journal(BaseModel):
    __root__: str


class Month(BaseModel):
    __root__: str


class Note(BaseModel):
    __root__: str


class Number(BaseModel):
    __root__: str


class Organization(BaseModel):
    __root__: str


class Pages(BaseModel):
    __root__: str


class Publisher(BaseModel):
    __root__: str


class School(BaseModel):
    __root__: str


class Series(BaseModel):
    __root__: str


class Title(BaseModel):
    __root__: str


class Url(BaseModel):
    __root__: str


class Volume(BaseModel):
    __root__: str


class Year(BaseModel):
    __root__: str


class File(BaseModel):
    __root__: bytes


class EntryType(Enum):
    article = 'article'


class Article(BaseModel):
    entry_type: EntryType
    author: Author
    title: Title
    journal: Journal
    year: Year
    volume: Optional[Volume] = None
    number: Optional[Number] = None
    pages: Optional[Pages] = None
    month: Optional[Month] = None
    note: Optional[Note] = None


class EntryType1(Enum):
    book = 'book'


class Book(BaseModel):
    entry_type: EntryType1
    author: Author
    editor: Optional[Editor] = None
    title: Title
    publisher: Publisher
    year: Year
    number: Optional[Number] = None
    series: Optional[Series] = None
    address: Optional[Address] = None
    edition: Optional[Edition] = None
    month: Optional[Month] = None
    note: Optional[Note] = None


class EntryType2(Enum):
    booklet = 'booklet'


class Booklet(BaseModel):
    entry_type: EntryType2
    title: Title
    author: Optional[Author] = None
    howpublished: Optional[Howpublished] = None
    address: Optional[Address] = None
    month: Optional[Month] = None
    year: Optional[Year] = None
    note: Optional[Note] = None


class EntryType3(Enum):
    conference = 'conference'


class Conference(BaseModel):
    entry_type: EntryType3
    author: Author
    title: Title
    booktitle: Booktitle
    year: Year
    editor: Optional[Editor] = None
    volume: Optional[Volume] = None
    number: Optional[Number] = None
    series: Optional[Series] = None
    pages: Optional[Pages] = None
    address: Optional[Address] = None
    month: Optional[Month] = None
    organization: Optional[Organization] = None
    publisher: Optional[Publisher] = None
    note: Optional[Note] = None


class EntryType4(Enum):
    inbook = 'inbook'


class Inbook(BaseModel):
    entry_type: EntryType4
    author: Author
    editor: Optional[Editor] = None
    title: Title
    chapter: Optional[Chapter] = None
    pages: Pages
    publisher: Publisher
    year: Year
    volume: Optional[Volume] = None
    number: Optional[Number] = None
    series: Optional[Series] = None
    address: Optional[Address] = None
    edition: Optional[Edition] = None
    month: Optional[Month] = None
    note: Optional[Note] = None


class EntryType5(Enum):
    incollection = 'incollection'


class Incollection(BaseModel):
    entry_type: EntryType5
    author: Author
    title: Title
    booktitle: Booktitle
    publisher: Publisher
    year: Year
    editor: Optional[Editor] = None
    volume: Optional[Volume] = None
    number: Optional[Number] = None
    series: Optional[Series] = None
    chapter: Optional[Chapter] = None
    pages: Optional[Pages] = None
    address: Optional[Address] = None
    edition: Optional[Edition] = None
    month: Optional[Month] = None
    note: Optional[Note] = None


class EntryType6(Enum):
    inproceedings = 'inproceedings'


class Inproceedings(BaseModel):
    entry_type: EntryType6
    author: Author
    title: Title
    booktitle: Booktitle
    year: Year
    editor: Optional[Editor] = None
    volume: Optional[Volume] = None
    number: Optional[Number] = None
    series: Optional[Series] = None
    pages: Optional[Pages] = None
    address: Optional[Address] = None
    month: Optional[Month] = None
    organization: Optional[Organization] = None
    publisher: Optional[Publisher] = None
    note: Optional[Note] = None


class EntryType7(Enum):
    manual = 'manual'


class Manual(BaseModel):
    entry_type: EntryType7
    title: Title
    author: Optional[Author] = None
    organization: Optional[Organization] = None
    address: Optional[Address] = None
    edition: Optional[Edition] = None
    month: Optional[Month] = None
    year: Optional[Year] = None
    note: Optional[Note] = None


class EntryType8(Enum):
    mastersthesis = 'mastersthesis'


class Mastersthesis(BaseModel):
    entry_type: EntryType8
    author: Author
    title: Title
    school: School
    year: Year
    address: Optional[Address] = None
    month: Optional[Month] = None
    note: Optional[Note] = None


class EntryType9(Enum):
    misc = 'misc'


class Misc(BaseModel):
    entry_type: EntryType9
    author: Optional[Author] = None
    title: Optional[Title] = None
    howpublished: Optional[Howpublished] = None
    month: Optional[Month] = None
    year: Optional[Year] = None
    note: Optional[Note] = None


class EntryType10(Enum):
    phdthesis = 'phdthesis'


class Phdthesis(BaseModel):
    entry_type: EntryType10
    author: Author
    title: Title
    school: School
    year: Year
    address: Optional[Address] = None
    month: Optional[Month] = None
    note: Optional[Note] = None


class EntryType11(Enum):
    proceedings = 'proceedings'


class Proceedings(BaseModel):
    entry_type: EntryType11
    title: Title
    year: Year
    editor: Optional[Editor] = None
    volume: Optional[Volume] = None
    number: Optional[Number] = None
    series: Optional[Series] = None
    address: Optional[Address] = None
    month: Optional[Month] = None
    organization: Optional[Organization] = None
    publisher: Optional[Publisher] = None
    note: Optional[Note] = None


class EntryType12(Enum):
    techreport = 'techreport'


class Techreport(BaseModel):
    entry_type: EntryType12
    author: Author
    title: Title
    institution: Institution
    year: Year
    number: Optional[Number] = None
    address: Optional[Address] = None
    month: Optional[Month] = None
    note: Optional[Note] = None


class EntryType13(Enum):
    unpublished = 'unpublished'


class Unpublished(BaseModel):
    entry_type: EntryType13
    author: Author
    title: Title
    note: Note
    month: Optional[Month] = None
    year: Optional[Year] = None


class Entry(BaseModel):
    __root__: Union[
        Article,
        Book,
        Booklet,
        Conference,
        Inbook,
        Incollection,
        Inproceedings,
        Manual,
        Mastersthesis,
        Misc,
        Phdthesis,
        Proceedings,
        Techreport,
        Unpublished,
    ]


class EntryList(BaseModel):
    __root__: List[
        Union[
            Article,
            Book,
            Booklet,
            Conference,
            Inbook,
            Incollection,
            Inproceedings,
            Manual,
            Mastersthesis,
            Misc,
            Phdthesis,
            Proceedings,
            Techreport,
            Unpublished,
        ]
    ]


class SearchQuery(BaseModel):
    query: Optional[str] = None


class Error(BaseModel):
    code: Optional[int] = None
    message: Optional[str] = None


class Success(BaseModel):
    code: Optional[int] = None
    message: Optional[str] = None
